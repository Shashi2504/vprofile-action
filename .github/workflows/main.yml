name: vprofile actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: #provide the ECR repository name
  EKS_CLUSTER: #provide the EKS cluster name


jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Maven test
        run: mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle

      - name: Set Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'termurin'
          java-version: '11'

      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

      - name: SonarQube Scan
        run: sonar-scanner
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.organization=${{ secrets.SOANR_ORGANIZATION }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.sources=src/
          -Dsonar.junit.reportsPath=target/surefire-reports/
          -Dsonar.jacoco.reportsPath=targets/jacoco.exec
          -Dsonar.java.checkstyle.reportPath=target/checkstyle-result.xml
          -Dsonar.java.binaries=target/test-classes/com/visualpathit/account

      - name: SoanrQube Quality Gate Check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SOANR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}


  BUILD_AND_PUBLISH:
  needs: Testing
  runs-on: ubuntu-latest
  steps:
    - name: Code Checkout
      uses: actions/checkout@v4

    - name: Build & Upload the image to ECR
      uses: appleboy/docker-ecr-action@master
      with:
        access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        registry: ${{ secrets.REGISTRY }}
        repo: ${{ env.ECR_REPOSITORY }}
        region: ${{ env.AWS_REGION }}
        tags: latest,${{ github.run_number }}
        daemon_off: false
        dockerfile: ./Dockerfile
        context: ./


        
